@model ProInterface.Models.TQuery
@{
    ViewBag.Title = "Query";
    string pageList = "";
    for (int i = 1; i <= 5; i++)
    {
        pageList += (this.Model.PAGE_SIZE * i) + ",";
    }
    pageList = pageList.Substring(0, pageList.Length - 1);

    ProServer.GlobalUser gu = ViewData["Gu"] as ProServer.GlobalUser;
}

<style type="text/css">
        .lines-both .datagrid-body td{
            border:solid #eaf200;border-width:0px 1px 1px 0px
        }
      
    </style>

<script type="text/javascript" src="~/Scripts_Page/Query.js"></script>
<link href="~/Scripts/datetimepicker/jquery.datetimepicker.css" rel="stylesheet" />
<script type="text/javascript" src="~/Scripts/datetimepicker/jquery.datetimepicker.js"></script>
<script type="text/javascript" src="~/Scripts/jquery.cookie.js"></script>

@if (Request.UserAgent.ToLower().IndexOf("iphone") > 0 || Request.UserAgent.ToLower().IndexOf("android") > 0)
{
    <link href="~/Styles/Query.css" rel="stylesheet" />
}

@using (Html.BeginForm())
{
    @Html.HiddenFor(x => x.ID)
    @Html.HiddenFor(x => x.NAME)
    @Html.HiddenFor(x => x.REMARK)
    @Html.HiddenFor(x => x.QUERY_CFG_JSON)
    @Html.HiddenFor(m => m.NoAuthority);
    @Html.HiddenFor(x => x.ROWS_BTN)
    @Html.HiddenFor(x => x.NEW_DATA)
    <input id="AllPara" type="hidden" name="AllPara" value="@ViewBag.AllPara" />
    <input id="Code" type="hidden" name="Code" value="@ViewBag.Code" />
    <input type="hidden" id="cfgwidth" value="@Model.QueryCfg.Sum(k =>( k.Width==0)?110:k.Width)" />
    <div class="easyui-dialog" title="<span style='font-size:14px'>筛选</span>" data-options="left:0,top:0,closable:true,closed:true" style="margin: 0px" id="div_filte">
        <div class="container-fluid" style="margin: 0px">
            <div class="input-group input-group-sm">
                <div class="input-group-addon ">筛选条件</div>
                <div class="form-control">
                    <div class="row">
                        @if (this.Model.QueryCfg != null && this.Model.QueryCfg.Count() > 0)
                        {
                            var allCanSearch = this.Model.QueryCfg.Where(x => x.CanSearch).ToList();

                            <input id="searchField" type="hidden" value="@(ProInterface.JSON.DecodeToStr(allCanSearch))" />
                            <input id="GetWhereStr" type="hidden" value="" />
                            foreach (var para in allCanSearch)
                            {
                                var typeJson = new[] { 
                            new {@id="=",@text="等于"},
                            new {@id=">",@text="大于"},
                            new {@id="<",@text="小于"}
                        };
                                string inputControl = "<input id=\"s_{0}_value\" class=\"form-control {1}\" type=\"text\"   />";
                                if (para.SearchType == "combobox1") { para.SearchType = "combobox_1"; }
                                if (string.IsNullOrEmpty(para.SearchScript)) { para.SearchScript = ""; }
                                switch (para.SearchType)
                                {
                                    default:
                                        typeJson = new[] { 
                                            new {@id="like",@text="包含"},
                                            new {@id="=",@text="等于"},
                                            new {@id="in",@text="存在"},
                                        };
                                        inputControl = string.Format(inputControl, para.FieldName, "");
                                        break;
                                    case "numberbox":
                                        //classAndoptions = "class=easyui-numberbox";
                                        inputControl = string.Format(inputControl, para.FieldName, "form_numberbox");
                                        break;
                                    case "datetimebox":
                                        inputControl = string.Format(inputControl, para.FieldName, "form_datetime");
                                        break;
                                    case "combobox":
                                        inputControl = "<select id=\"s_{0}_value\" class=\"form-control\" >{1}</select>";
                                        int dataStart = para.SearchScript.IndexOf("data:[");
                                        if (dataStart > 0)
                                        {
                                            int dataEnd = para.SearchScript.IndexOf("]", dataStart);
                                            string optionStr = "";
                                            var jsData = para.SearchScript;
                                            if (dataEnd > dataStart + 5)
                                            {
                                                jsData = para.SearchScript.Substring(dataStart + 5, dataEnd - dataStart - 4);
                                            }
                                            IList<ProInterface.Models.IdText> nowData = ProInterface.JSON.EncodeToEntity<IList<ProInterface.Models.IdText>>(jsData);
                                            if (nowData.Where(x => string.IsNullOrEmpty(x.id)).Count() == 0)
                                            {
                                                optionStr += string.Format("<option value=\"{0}\">{1}</option>", "", "全部");
                                            }
                                            foreach (var t in nowData)
                                            {
                                                optionStr += string.Format("<option value=\"{0}\">{1}</option>", t.id, t.text);
                                            }
                                            inputControl = string.Format(inputControl, para.FieldName, optionStr);
                                        }
                                        typeJson = new[] { 
                                                new {@id="=",@text="等于"},
                                            };
                                        break;
                                    case "combobox_1":
                                        inputControl = "<select id=\"s_{0}_value\" class=\"form-control\" >{1}</select>";
                                        dataStart = para.SearchScript.IndexOf("?sql=");
                                        if (dataStart > 0)
                                        {
                                            var dataEnd = para.SearchScript.IndexOf("})", dataStart);
                                            var jsData = para.SearchScript;
                                            if (dataEnd > dataStart + 5)
                                            {
                                                jsData = para.SearchScript.Substring(dataStart + 5, dataEnd - dataStart - 7);
                                            }
                                            var dt = new Web.Controllers.QueryController().ExecSqlDt(jsData);
                                            var optionStr = "<option value=\"\">全部</option>";
                                            for (var i = 0; i < dt.Rows.Count; i++)
                                            {
                                                if (dt.Columns.Count > 1)
                                                {
                                                    optionStr += string.Format("<option value=\"{0}\">{1}</option>", dt.Rows[i][0], dt.Rows[i][1]);
                                                }
                                                else
                                                {
                                                    optionStr += string.Format("<option value=\"{0}\">{1}</option>", dt.Rows[i][0], dt.Rows[i][0]);
                                                }
                                            }
                                            inputControl = string.Format(inputControl, para.FieldName, optionStr);
                                        }
                                        typeJson = new[] { 
                                                new {@id="=",@text="等于"},
                                            };
                                        break;


                                }
                            <div class="col-md-3">
                                <div class="input-group input-group-sm" style="margin: 1px 0px">
                                    <span class="input-group-addon">@para.Alias :<span>
                                        <select id="s_@(para.FieldName)_type">
                                            @foreach (var t in typeJson)
                                            {
                                                <option value="@t.id">@t.text</option>
                                            }
                                        </select>
                                    </span></span>

                                    @if (Request[para.FieldName] != null && para.FieldName.ToLower() != "code" && para.FieldName.ToLower() != "url")
                                    {
                                        <input id="s_@(para.FieldName)_value" type="text" class="form-control"  value="@Request[para.FieldName]"  />
                                    }
                                    else
                                    {
                                        @MvcHtmlString.Create(inputControl)
                                    }

                                </div>
                            </div>
                            }
                        }
                        @if (this.Model != null && !string.IsNullOrEmpty(this.Model.FILTR_STR))
                        {
                            @MvcHtmlString.Create(this.Model.FILTR_STR)
                        }

                        @if (this.Model != null && this.Model.FILTR_LEVEL == 1)
                        {
            
                            <div class="col-md-3">
                                <div class="input-group input-group-sm" style="margin: 1px 0px">
                                    <span class="input-group-addon">统计范围 : </span>
                                    <div class="form-control">
                                        @Html.Hidden("DISTRICT_ID", ViewData["mydis"], new { @class = "filtrClass" })
                                        @Html.TextBox("dis", ViewData["mydis"], new
                                   {
                                       @class = "easyui-combotree",
                                       @style = "width:150px",
                                       @data_options = @"
                                        url:'../District/GetAll',
                                        panelHeight:300,
                                        loadFilter: function (rows) {
                                            return convert(rows);
                                        },
                                        onChange: function (newValue, oldValue) {
                                            $('#DISTRICT_ID').val(newValue);
                                        },
                                        editable:false,animate:true"
                                   })
                                    </div>
                                </div>
                            </div>
                        }

                    </div>
                </div>
            </div>
        </div>
        <div class="input-group input-group-sm" style="margin: 1px 0px">
            <div class="input-group-addon ">
                查询字段
            </div>
            <div class="form-control">
                <div class="row">
                    <div class="col-md-3">
                        <div class="input-group input-group-sm">
                            <span class="input-group-addon">
                                全选
                            </span>
                            <div class="form-control">
                                <input type="checkbox" onclick="$('input[name=\'AllShow_JSITEM\']').attr('checked', $(this).attr('checked')!=null);BoxListSetV('AllShow')"><span> 全选</span>
                            </div>
                        </div>

                    </div>
                    <div class="col-md-9">
                        <div class="input-group input-group-sm">
                            <span class="input-group-addon">显示字段过滤
                                    <select id="ShowFiled_type">
                                        <option value="包含">包含</option>
                                        <option value="不包含">不包含</option>
                                    </select>
                            </span>
                            <div class="form-control">@Html.TextBox("ShowFiled_key")
                                <button type="button" class="btn btn-primary btn-xs" onclick="ShowFiled_handler()">过滤</button>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-2">
                        @Html.Hidden("QueryFiled", string.Join(",", this.Model.QueryCfg.Where(x => x.Show).Select(x => x.FieldName + "|" + x.Alias).ToArray()))
                        @Html.Hidden("AllShow", string.Join(",", this.Model.QueryCfg.Where(x => x.Show).Select(x => x.FieldName).ToArray()))
                    </div>
                </div>
                <div class="row" id="ShowFiled_row">
                    @if (this.Model.QueryCfg != null)
                    {
                        foreach (ProInterface.Models.QueryCfg para in this.Model.QueryCfg.Where(x => x.Show).ToArray())
                        {
                        <div class="col-md-3" style="margin: 1px 0px">
                            <div class="input-group input-group-sm">
                                <span class="input-group-addon">
                                    <input type="checkbox" checked="checked" name="AllShow_JSITEM" value="@para.FieldName" onclick="BoxListSetV('AllShow',this)">
                                </span>
                                <div class="form-control">@para.Alias</div>
                            </div>
                        </div>
                        }
                    }
                </div>
            </div>
        </div>

        <div style="text-align: center; width: 100%">
            <div class="btn-group" role="group" style="margin: 0 auto; margin: 3px" aria-label="按钮组">
                @if(this.Model.NoAuthority==null || this.Model.NoAuthority.IndexOf("查询")==-1)
                {
                <button type="button" class="btn btn-primary" onclick="$('#div_filte').dialog('close');GoFilter()">查询</button>
                }
                <button type="button" class="btn btn-danger" onclick="ClearFilter();">清除</button>
            </div>
        </div>
    </div> 
    
    
    <div style="background-image:url(@Url.Content("~/UpFiles/" + Web.Fun.UserKey + ".jpg"))">
        <table id="dg" class="easyui-datagrid"   data-options="
    pageSize:@this.Model.PAGE_SIZE,
    pageList:[@pageList],
    rownumbers: true,
    nowrap: false,
    onLoadSuccess: onLoadSuccess,
    onBeforeLoad: onBeforeLoad,
            rowStyler: function(index,row){
                    if (index % 2==0){
                        return 'background-color:#eaf2aa;';
                    }
                },
    singleSelect:@((this.Model.SHOW_CHECKBOX == 1) ? "false" : "true"),
    onHeaderContextMenu: function(e, field){
                e.preventDefault();
                if (!cmenu){
                    createColumnMenu();
                }
                cmenu.menu('show', {
                    left:e.pageX,
                    top:e.pageY
                });
            }
    ">
            <thead>
                <tr >

                    @if (this.Model.QueryCfg != null)
                    {
                        foreach (ProInterface.Models.QueryCfg para in this.Model.QueryCfg.Where(x => x.Show).Skip(1).ToArray())
                        {
                            var formatStr = "";
                            if (!string.IsNullOrEmpty(para.Format))
                            {
                                formatStr = string.Format(",formatter:{0}", para.Format);
                            }
                        <th style="" data-options="@string.Format("field:'{0}',width:{1},sortable:'{2}'{3}", para.FieldName, (para.Width==0)?100:para.Width, para.Sortable.ToString().ToLower(), formatStr)" >
                            @if (para.CanSearch == true)
                            {
                                <span href="javascript:void(0)" id="@("filter_" + para.FieldName)" onclick="ShowFilter(event,this,'@para.FieldName')" class="easyui-linkbutton" data-options="iconCls:'icon-search',plain:true" ></span>
                            }
                            <span style="line-height: 26px; height: 26px;">@para.Alias</span>
                        </th>
                        }
                    }
                </tr>
            </thead>
        </table>
    </div>
    <div id="toolbar" style="display: none">
        @Html.HiddenFor(m => m.HEARD_BTN)
        <div class="btn-group btn-group-sm">
            @if ((this.Model != null && this.Model.IS_DEBUG == 1) || gu.RoleID.Contains(1))
            {
                <button type="button" class="btn btn-default" onclick="ShowDebug()"><span class="glyphicon glyphicon-info-sign"></span>调试</button>
            }
            @if (this.Model != null && !string.IsNullOrEmpty(this.Model.HEARD_BTN))
            {
                var allHeardBtn = ProInterface.JSON.EncodeToEntity<IList<ProInterface.Models.QueryRowBtn>>(this.Model.HEARD_BTN);
                if (allHeardBtn.Where(x => x.Url == "doDown()").Count() == 0)
                {
                <button type="button" class="btn btn-default" onclick="doDown()"><span class="glyphicon glyphicon-download-alt"></span>导出</button>
                }
            }
            <button type="button" class="btn btn-default easyui-tooltip" onclick="$('#div_filte').dialog('open')"><span class="glyphicon glyphicon-glass"></span>筛选</button>
            @if (this.Model != null && this.Model.CHARTS_CFG != null)
            {
                <button type="button" class="btn btn-default easyui-tooltip" onclick="window.location='../Charts/Hcharts?code=@Model.CODE&'+GetParStr()"><span class="glyphicon glyphicon-picture"></span>查看图表</button>
            }
            <span id="but" class="btn-group btn-group-sm"></span>
            <span id="filterMessage" style="line-height: 30px; margin: 2px">&nbsp;</span>
            <span id="ParaMessage" style="line-height: 30px; margin: 2px">&nbsp;</span>
        </div>
    </div> 
    

    <div style="display: none">
        <div id="dlg_txt" class="easyui-dialog" data-options="iconCls:'icon-search',closed:true,width:150">
            <div class="input-group input-group-sm">
                <span class="input-group-addon" id="div_type">
                    <select class="easyui-combobox" style="width: 60px" id="s_type">
                        <option value="like" selected>包含</option>
                        <option value="=">等于</option>
                    </select>
                </span>
                <div class="form-control" id="div_input">
                    <input type="text" id="s_value" style="width: 100px" />
                </div>
            </div>
        </div>
    </div>
    <script type="text/javascript">


        @foreach (var t in ViewData["para"] as IList<ProInterface.Models.QueryPara>)
        {
            <Text>@t.ParaName ='@t.Value';</Text>
        }

        @MvcHtmlString.Create(Model.JS_STR);

        $(function () {

            $('#dg').datagrid('getPanel').removeClass('lines-both lines-no lines-right lines-bottom').addClass("lines-both");






            var sumht = $(this).height();
            var bl = true;

            var cfgwh = $("#cfgwidth").val();
            var dgwh = $("#dg").parent().parent().width();
            if (parseFloat(cfgwh) > dgwh) {
                bl = false;
            }


            @{
        var forze = "";
        if (this.Model.SHOW_CHECKBOX == 1)
        {
            forze += ",{field:'ck',checkbox:true}";
        }
        if (!string.IsNullOrEmpty(this.Model.ROWS_BTN) && this.Model.ROWS_BTN.Length > 5)
        {
            forze += ",{title:'操作',field:'action',formatter:ShowRowBtn,width:" + this.Model.QueryRowBtnList.Sum(x => x.Name.Length) * 20 + "}";
        }

        var key = this.Model.QueryCfg.Where(x => x.Show).ToList()[0];
        var filStr = "<span href=\"javascript:void(0)\" id=\"filter_{0}\" onclick=\"ShowFilter(event,this,\\'{0}\\')\" class=\"easyui-linkbutton l-btn l-btn-small l-btn-plain\"  group=\"\"><span class=\"l-btn-left l-btn-icon-left\"><span class=\"l-btn-text l-btn-empty\">&nbsp;</span><span class=\"l-btn-icon icon-search\">&nbsp;</span></span></span>";

        filStr = string.Format(filStr, key.FieldName);
        if (!key.CanSearch)
        {
            filStr = "";
        }
        var alias = string.Format("<span style=\"line-height: 26px; height: 26px;\">{0}</span>", key.Alias);
        var forzeFormat = "";
        if (!string.IsNullOrEmpty(key.Format))
        {
            forzeFormat = string.Format(",formatter:{0}", key.Format);
        }
        forze += string.Format(",{{title:'{0}',field:'{1}',width:{3},sortable:true{2}}}", filStr + alias, key.FieldName, forzeFormat, key.Width);
        if (forze.Length > 0) { forze = forze.Substring(1); }
            }
            var whereStr = GetWhereStr()
            $("#GetWhereStr").val(whereStr);
            SetAllParaStr();
            @if (Request["simple"] == "1")
            {
               <Text>
            $.ajax({
                url: 'QueryList',
                data: {
                    page:1,
                    rows:100,
                    AllParaStr: $("#AllPara").val(),
                    Code: $("#Code").val(),
                    WhereStr: $("#GetWhereStr").val()
                },
                success: function (dataStr) {
                    $('#dg').datagrid({
                        pagination:false,
                        pageSize:100,
                        pageList:[100], 
                        data:JSON.parse(dataStr),
                        fitColumns: bl,
                        height: (sumht),
                        frozenColumns:[[
                                      @MvcHtmlString.Create(forze)
                                ]],
                                queryParams: {
                                    AllParaStr: $("#AllPara").val(),
                                    Code: $("#Code").val(),
                                    WhereStr: $("#GetWhereStr").val()
                                }
                            });
                            SetpagerSimple();
                        },
                        error: function (data) {
                            alert('失败:' + data.responseText);
                        }
                    });
            var pager = $('#dg').datagrid().datagrid('getPager');    // get the pager of datagrid
            pager.pagination({
                layout: []
            });
            </text> 
            }
            else
            {
                if (this.Model.AUTO_LOAD == 1)
                {
                    <text>
            setTimeout(function(){
                var whereStr = GetWhereStr()
                $("#GetWhereStr").val(whereStr);
                SetAllParaStr();
                $('#dg').datagrid({
                    pagination:true,
                    toolbar:"#toolbar",
                    fitColumns: bl,
                    url: 'QueryList',
                    onLoadSuccess:onLoadError,
                    height: (sumht),
                    frozenColumns:[[
                                            @MvcHtmlString.Create(forze)
                                ]],
                                queryParams: {
                                    AllParaStr: $("#AllPara").val(),
                                    Code: $("#Code").val(),
                                    WhereStr: $("#GetWhereStr").val()
                                }
                            });
                            Setpager();
                        },100);

                    </text>
                }
                else
                {
                    <text>
            $('#dg').datagrid({
                pagination:true,
                toolbar:"#toolbar",
                fitColumns: bl,
                height: (sumht),
                frozenColumns:[[
                                                    @MvcHtmlString.Create(forze)
                            ]],
                            queryParams: {
                                AllParaStr: $("#AllPara").val(),
                                Code: $("#Code").val(),
                                WhereStr: $("#GetWhereStr").val()
                            }
                        });
            $('#div_filte').dialog('open')
            </text>
                }
            }
        });

        function onLoadError(a,b)
        {
            if(a.msgtype!=null)
            {
                $.messager.alert(a.msgtitle,a.msginfo,'error');
            }
        }
    </script>
    <div id="dialog_DD"></div>
    <div id="dialog_FullWin" title="添加" class="easyui-dialog" style="height: 250px; width: 550px;overflow-y: scroll;-webkit-overflow-scrolling: touch;" data-options="closed: true,iconCls:'icon-properties',modal:true,maximizable:true,resizable:true">
        <iframe scrolling="auto" id='openWindowIframe' name="openWindowIframe" frameborder="0" style="width: 100%; height: 98%; padding: 2px;
"></iframe>
    </div>  
}
